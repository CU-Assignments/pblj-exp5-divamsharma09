import java.util.ArrayList;
import java.util.List;

class Seat {
    private int seatNumber;
    private boolean isBooked;

    public Seat(int seatNumber) {
        this.seatNumber = seatNumber;
        this.isBooked = false;
    }

    public int getSeatNumber() {
        return seatNumber;
    }

    public synchronized boolean bookSeat() {
        if (!isBooked) {
            isBooked = true;
            return true;
        }
        return false;
    }

    public synchronized boolean isBooked() {
        return isBooked;
    }

    @Override
    public String toString() {
        return "Seat [seatNumber=" + seatNumber + ", isBooked=" + isBooked + "]";
    }
}

class TicketBookingSystem {
    private List<Seat> seats;

    public TicketBookingSystem(int numberOfSeats) {
        seats = new ArrayList<>();
        for (int i = 1; i <= numberOfSeats; i++) {
            seats.add(new Seat(i));
        }
    }

    public synchronized Seat bookSeat() {
        for (Seat seat : seats) {
            if (!seat.isBooked()) {
                seat.bookSeat();
                return seat;
            }
        }
        return null;
    }
}

class BookingThread extends Thread {
    private TicketBookingSystem bookingSystem;
    private String bookingType;

    public BookingThread(TicketBookingSystem bookingSystem, String bookingType) {
        this.bookingSystem = bookingSystem;
        this.bookingType = bookingType;
    }

    @Override
    public void run() {
        Seat bookedSeat = bookingSystem.bookSeat();
        if (bookedSeat != null) {
            System.out.println(bookingType + " booked " + bookedSeat);
        } else {
            System.out.println(bookingType + " failed to book a seat.");
        }
    }
}

public class TicketBooking {
    public static void main(String[] args) {
        TicketBookingSystem bookingSystem = new TicketBookingSystem(10);

        // Creating regular and VIP booking threads
        BookingThread vipBooking1 = new BookingThread(bookingSystem, "VIP Booking 1");
        BookingThread vipBooking2 = new BookingThread(bookingSystem, "VIP Booking 2");
        BookingThread regularBooking1 = new BookingThread(bookingSystem, "Regular Booking 1");
        BookingThread regularBooking2 = new BookingThread(bookingSystem, "Regular Booking 2");

        // Setting priorities for the threads
        vipBooking1.setPriority(Thread.MAX_PRIORITY);
        vipBooking2.setPriority(Thread.MAX_PRIORITY);
        regularBooking1.setPriority(Thread.NORM_PRIORITY);
        regularBooking2.setPriority(Thread.NORM_PRIORITY);

        // Starting the threads
        vipBooking1.start();
        vipBooking2.start();
        regularBooking1.start();
        regularBooking2.start();

        // Waiting for all threads to finish
        try {
            vipBooking1.join();
            vipBooking2.join();
            regularBooking1.join();
            regularBooking2.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
}
